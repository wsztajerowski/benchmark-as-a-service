name: E2E Production Benchmark Test

on:
  workflow_dispatch:
  pull_request:

env:
  S3_BUCKET: baas-lynx-main
  AWS_REGION: eu-central-1
  JAVA_VERSION: 21
  JAVA_DISTRIBUTION: temurin
  ASYNC_PROFILER_VERSION: "4.0"

jobs:
  prepare-test:
    name: Prepare test artifacts and upload to S3
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      request_id: ${{ steps.gen_request_id.outputs.request_id }}
      java_version: ${{ steps.export_constants.outputs.JAVA_VERSION }}
      s3_bucket: ${{ steps.export_constants.outputs.S3_BUCKET }}
      async_profiler_version: ${{ steps.export_constants.outputs.ASYNC_PROFILER_VERSION }}
    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v5
#
#      - name: Set up Java
#        uses: actions/setup-java@v5
#        with:
#          java-version: ${{ env.JAVA_VERSION }}
#          distribution: ${{ env.JAVA_DISTRIBUTION }}
#
#      - name: Set up AWS CLI
#        uses: aws-actions/configure-aws-credentials@v5
#        with:
#          role-to-assume: ${{ secrets.WORKFLOW_ROLE_ARN }}
#          aws-region: ${{ env.AWS_REGION }}
#
#      - name: Build runner and benchmark jars
#        run: |
#          mvn -f ./pom.xml -q clean package -DskipTests
#
#      - name: Upload runner jar to S3 (prod)
#        run: |
#          aws s3 cp ./benchmark-runner/target/benchmark-runner.jar "s3://${{ env.S3_BUCKET }}/ci/runner.jar"
#
#      - name: Upload benchmark jar to S3 (prod)
#        run: |
#          aws s3 cp ./fake-jmh-benchmarks/target/fake-jmh-benchmarks.jar "s3://${{ env.S3_BUCKET }}/ci/test-benchmark.jar"

      - name: Export constants for downstream job
        id: export_constants
        run: |
          echo "JAVA_VERSION=${{ env.JAVA_VERSION }}" >> "$GITHUB_OUTPUT"
          echo "S3_BUCKET=${{ env.S3_BUCKET }}" >> "$GITHUB_OUTPUT"
          echo "ASYNC_PROFILER_VERSION=${{ env.ASYNC_PROFILER_VERSION }}" >> "$GITHUB_OUTPUT"

      - name: Generate request ID
        id: gen_request_id
        run: echo "request_id=CI_E2E_$(date -u +'%Y%m%d_%H%M%S')" >> "$GITHUB_OUTPUT"

  call-workflow:
    name: Call benchmark workflow
    needs: prepare-test
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/exec-single-benchmark.yml
    with:
      gha-runner-type: ubuntu-latest
      java-version: ${{ needs.prepare-test.outputs.java_version }}
      benchmark-type: jmh-with-async
      request-id: ${{ needs.prepare-test.outputs.request_id }}
      benchmark-path: "s3://${{ needs.prepare-test.outputs.s3_bucket }}/ci/test-benchmark.jar"
      runner-path: "s3://${{ needs.prepare-test.outputs.s3_bucket }}/ci/runner.jar"
      s3-result-bucket: ${{ needs.prepare-test.outputs.s3_bucket }}
      async-profiler-version: ${{ needs.prepare-test.outputs.async_profiler_version }}
      parameters: "--tag source=gha-e2e-test Incrementing_Synchronized -f 1 -wi 1 -i 1 --async-event=wall --async-output-type=flamegraph,jfr --async-additional-param threads=true"
    secrets:
      MONGO_CONNECTION_STRING: ${{ secrets.MONGO_CONNECTION_STRING }}

#  verify-test-result:
#    name: Verify benchmark results
#    runs-on: ubuntu-latest
#    needs: call-workflow
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v5
#
#      - name: Set up AWS CLI
#        uses: aws-actions/configure-aws-credentials@v5
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ env.AWS_REGION }}
#
#      - name: Install Mongosh CLI
#        run: |
#          curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo gpg --dearmor -o /usr/share/keyrings/mongodb-server-6.0.gpg
#          echo "deb [ signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
#          sudo apt-get update
#          sudo apt-get install -y mongodb-mongosh
#
#      - name: Verify S3 results
#        run: |
#          aws s3 ls "s3://${{ env.S3_BUCKET }}/${{ needs.prepare-test.outputs.request_id }}/jmh-with-async-output.txt"
#          aws s3 ls "s3://${{ env.S3_BUCKET }}/${{ needs.prepare-test.outputs.request_id }}/pl.wsztajerowski.fake.Incrementing_Synchronized.incrementUsingSynchronized-Throughput/flame-wall-forward.html"
#
#      - name: Verify MongoDB results
#        env:
#          MONGO_CONNECTION_STRING: ${{ secrets.MONGO_CONNECTION_STRING }}
#        run: |
#          mongosh "$MONGO_CONNECTION_STRING" --quiet --eval "db.getCollection('jmh_benchmarks').findOne({'_id.requestId': '${{ needs.prepare-test.outputs.request_id }}'})"
#          mongosh "$MONGO_CONNECTION_STRING" --quiet --eval "db.getCollection('jmh_benchmarks').findOne({'benchmarkMetadata.tags.source': 'gha-e2e-prod'})"
#
#      - name: All checks passed
#        run: echo "E2E production benchmark workflow and validation succeeded!"