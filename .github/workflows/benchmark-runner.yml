name: Run benchmark request on AWS

on:
  workflow_dispatch:
    inputs:
      benchmark_type:
        description: One of the supported benchmark type
        required: true
        type: choice
        options:
          - jmh
          - jmh-with-async
          - jcstress
      benchmark_path:
        type: string
        required: true
        description: S3 url to benchmark jar
      s3_result_bucket:
        type: string
        default: baas-lynx-main
        description: S3 bucket name for benchmark results
      request_id:
        type: string
        description: ID of benchmark run request
      results_path:
        type: string
        description: S3 or local path to benchmark results
      parameters:
        type: string
        description: Additional parameters for benchmark
      worker_instance_family:
        description: One of the supported EC2 worker instance family
        default: c5
        type: choice
        options:
          - c5
          - c6i
          - c7i
      worker_instance_size:
        description: One of the supported EC2 worker instance size
        default: 2xlarge
        type: choice
        options:
          - 2xlarge
          - 4xlarge
          - 8xlarge
env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AMI_NAME: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64
jobs:
  start-runner:
    name: Start EC2 runner
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.WORKFLOW_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Get latest AL 2023 AMI ID
        id: latest-ami-id
        run: |
          AMI_ID=`aws ssm get-parameters --names ${{ env.AMI_NAME }} --query 'Parameters[0].[Value]' --output text`
          echo "Newest AMI ID: $AMI_ID"
          echo "AMI_ID=$AMI_ID" >> "$GITHUB_OUTPUT"
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GHA_EC2_PAT }}
          ec2-image-id: ${{ steps.latest-ami-id.outputs.AMI_ID }}
          ec2-instance-type: ${{ inputs.worker_instance_family }}.${{ inputs.worker_instance_size }}
          subnet-id: ${{ vars.SUBNET_ID }}
          security-group-id: ${{ vars.SECURITY_GROUP_ID }}
          iam-role-name: ${{ secrets.RUNNER_ROLE_NAME }}
          aws-resource-tags: > 
            [
              {"Key": "project", "Value": "baas"},
              {"Key": "run_id", "Value": "${{ github.run_id }}" },
              {"Key": "runner", "Value": "request-benchmark-runner"}
            ]
          pre-runner-script: |
            sudo yum update -y && \ 
            sudo yum install docker git libicu -y && \
            sudo systemctl enable docker
  call-exec-benchmark-workflow:
    name: Run Benchmark runner workflow
    needs:
      - start-runner
    uses: ./.github/workflows/exec-single-benchmark.yml
    with:
      request-id: ${{ inputs.request_id }}
      benchmark-type:  ${{ inputs.benchmark_type }}
      benchmark-path: ${{ inputs.benchmark_path }}
      s3-result-bucket: ${{ inputs.s3_result_bucket }}
      results-path: ${{ inputs.results_path }}
      parameters: ${{ inputs.parameters }}
      gha-runner-type: ${{ needs.start-runner.outputs.label }}
      aws-region: ${{ vars.AWS_REGION }}
      async-profiler-version: ${{ vars.ASYNC_PROFILER_VERSION }}
    secrets:
      MONGO_CONNECTION_STRING: ${{ secrets.MONGO_CONNECTION_STRING }}

  stop-runner:
    name: Stop EC2 runner
    needs:
      - start-runner
      - call-exec-benchmark-workflow
    if: always()
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.WORKFLOW_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GHA_EC2_PAT }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
